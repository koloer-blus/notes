import{_ as p,r as e,o as t,c as o,a as n,b as c,F as l,e as s,d as r}from"./app.1f59b63a.js";const u={},i={id:"\u4E24\u6570\u76F8\u52A0",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#\u4E24\u6570\u76F8\u52A0","aria-hidden":"true"},"#",-1),b=s(),m={href:"https://leetcode.cn/problems/add-two-numbers/",target:"_blank",rel:"noopener noreferrer"},d=s("\u4E24\u6570\u76F8\u52A0"),h=r(`<h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u7ED9\u4F60\u4E24\u4E2A\xA0\u975E\u7A7A \u7684\u94FE\u8868\uFF0C\u8868\u793A\u4E24\u4E2A\u975E\u8D1F\u7684\u6574\u6570\u3002\u5B83\u4EEC\u6BCF\u4F4D\u6570\u5B57\u90FD\u662F\u6309\u7167\xA0\u9006\u5E8F\xA0\u7684\u65B9\u5F0F\u5B58\u50A8\u7684\uFF0C\u5E76\u4E14\u6BCF\u4E2A\u8282\u70B9\u53EA\u80FD\u5B58\u50A8\xA0\u4E00\u4F4D\xA0\u6570\u5B57\u3002</p><p>\u8BF7\u4F60\u5C06\u4E24\u4E2A\u6570\u76F8\u52A0\uFF0C\u5E76\u4EE5\u76F8\u540C\u5F62\u5F0F\u8FD4\u56DE\u4E00\u4E2A\u8868\u793A\u548C\u7684\u94FE\u8868\u3002</p><p>\u4F60\u53EF\u4EE5\u5047\u8BBE\u9664\u4E86\u6570\u5B57 0 \u4E4B\u5916\uFF0C\u8FD9\u4E24\u4E2A\u6570\u90FD\u4E0D\u4F1A\u4EE5 0\xA0\u5F00\u5934\u3002</p><ul><li>\u793A\u4F8B1\uFF1A</li></ul><p>\u8F93\u5165\uFF1Al1 = [2,4,3], l2 = [5,6,4] \u8F93\u51FA\uFF1A[7,0,8] \u89E3\u91CA\uFF1A342 + 465 = 807.</p><ul><li>\u793A\u4F8B 2\uFF1A</li></ul><p>\u8F93\u5165\uFF1Al1 = [0], l2 = [0] \u8F93\u51FA\uFF1A[0]</p><ul><li>\u793A\u4F8B 3\uFF1A</li></ul><p>\u8F93\u5165\uFF1Al1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9] \u8F93\u51FA\uFF1A[8,9,9,9,0,0,0,1]</p><ul><li>\u63D0\u793A\uFF1A</li></ul><p>\u6BCF\u4E2A\u94FE\u8868\u4E2D\u7684\u8282\u70B9\u6570\u5728\u8303\u56F4 [1, 100] \u5185 0 &lt;= Node.val &lt;= 9 \u9898\u76EE\u6570\u636E\u4FDD\u8BC1\u5217\u8868\u8868\u793A\u7684\u6570\u5B57\u4E0D\u542B\u524D\u5BFC\u96F6</p><blockquote><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1Ahttps://leetcode.cn/problems/add-two-numbers \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p></blockquote><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><h3 id="\u65B0\u94FE\u8868\u5B58\u50A8" tabindex="-1"><a class="header-anchor" href="#\u65B0\u94FE\u8868\u5B58\u50A8" aria-hidden="true">#</a> \u65B0\u94FE\u8868\u5B58\u50A8</h3><p>\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u94FE\u8868\uFF0C\u7528<code>carry</code>\u8868\u793A\u6BCF\u4E00\u6B21\u76F8\u52A0\u540E\u5411<strong>\u9AD8\u4F4D\u8FDB\u4E00</strong>\uFF0C\u7136\u540E\u53BB\u5B58\u50A8\u6BCF\u4E00\u6B21<code>l1.val + l2.val + carry</code>\u7684\u503C\uFF08<strong>\u6CE8\u610F\u5728\u4E0D\u9700\u8981\u8FDB\u884C\u8FDB\u4F4D\u64CD\u4F5C\u65F6\u9700\u8981\u91CD\u7F6E<code>carry</code></strong>\uFF09\u3002\u6700\u540E\u5BF9\u6700\u540E\u4E00\u4E2A\u8282\u70B9\u662F\u5426\u9700\u8981\u65B0\u5EFA\u8282\u70B9\u6765\u4FDD\u5B58\u8FDB\u4F4D\u503C\u8FDB\u884C\u5224\u65AD\u5373\u53EF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**

 * @param <span class="token class-name"><span class="token punctuation">{</span>ListNode<span class="token punctuation">}</span></span> <span class="token parameter">l1</span>

 * @param <span class="token class-name"><span class="token punctuation">{</span>ListNode<span class="token punctuation">}</span></span> <span class="token parameter">l2</span>

 * @return <span class="token class-name"><span class="token punctuation">{</span>ListNode<span class="token punctuation">}</span></span>

 */</span>

<span class="token keyword">const</span> <span class="token function-variable function">addTwoNumbers</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">l1<span class="token punctuation">,</span> l2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> head <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> temp <span class="token operator">=</span> head<span class="token punctuation">,</span> carry <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>l1 <span class="token operator">||</span> l2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> sum <span class="token operator">=</span> <span class="token punctuation">(</span>l1 <span class="token operator">?</span> l1<span class="token punctuation">.</span>val<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>l2<span class="token operator">?</span> l2<span class="token punctuation">.</span>val<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token operator">+</span> carry<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            head <span class="token operator">=</span> temp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            temp<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            temp <span class="token operator">=</span> temp<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token parameter">sum <span class="token operator">&gt;=</span> <span class="token number">10</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            carry <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            temp<span class="token punctuation">.</span>val <span class="token operator">=</span> sum <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            carry <span class="token operator">=</span> <span class="token number">0</span>
            temp<span class="token punctuation">.</span>val <span class="token operator">=</span> sum<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token parameter">l1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            l1 <span class="token operator">=</span> l1<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token parameter">l2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            l2 <span class="token operator">=</span> l2<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token parameter">carry</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        temp<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> head<span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div>`,17);function _(y,w){const a=e("ExternalLinkIcon");return t(),o(l,null,[n("h1",i,[k,b,n("a",m,[d,c(a)])]),h],64)}var v=p(u,[["render",_],["__file","LEETCODE-\u4E24\u6570\u76F8\u52A0.html.vue"]]);export{v as default};
